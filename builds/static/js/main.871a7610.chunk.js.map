{"version":3,"sources":["App.js","index.js"],"names":["App","props","handleWho","event","setState","newWho","target","value","handleWat","newWat","handleCool","dude","cool","state","characters","map","item","removeDude","filter","handleSubmit","key","newDude","id","Math","max","d","who","wat","resetForm","listOfDudes","CSSTransition","timeout","classNames","className","onClick","type","onChange","input","current","focus","React","createRef","TransitionGroup","component","this","onKeyPress","autoFocus","ref","Component","ReactDOM","render","document","getElementById"],"mappings":"qQA4MiBA,E,kDApMb,WAAYC,GAAO,IAAD,8BAEhB,cAAMA,IAuCPC,UAAU,SAAAC,GACL,EAAKC,SAAS,CACdC,OAAOF,EAAMG,OAAOC,SA3CR,EAkDlBC,UAAU,SAAAL,GACN,EAAKC,SAAS,CACZK,OAAON,EAAMG,OAAOC,SApDR,EA2DlBG,WAAW,SAAAC,GAAI,OAAE,SAAAR,GAEb,IAAMS,EAAKT,EAAMG,OAAOC,MACxB,EAAKH,UAAS,SAACS,GACX,MAAO,CACDC,WAAWD,EAAMC,WAAWC,KAAI,SAAAC,GAAI,OACpCA,IAAOL,EAAP,2BAAkBA,GAAlB,IAAwBC,SAASI,WAjE7B,EA2ElBC,WAAW,SAAAN,GACP,EAAKP,UAAS,SAACS,GACX,MAAO,CACLC,WAAWD,EAAMC,WAAWI,QAAO,SAAAF,GAAI,OAAEA,IAAQL,UA9EzC,EAuFlBQ,aAAe,SAAAhB,GACO,UAAdA,EAAMiB,KAAmB,EAAKP,MAAMR,QAAU,EAAKQ,MAAMJ,SAC1D,EAAKL,UAAS,SAAAS,GACX,IAAMQ,EAAU,CACbC,GAAIC,KAAKC,IAAL,MAAAD,KAAI,YAAQV,EAAMC,WAAWC,KAAI,SAAAU,GAAC,OAAIA,EAAEH,QAAO,EACnDI,IAAK,EAAKb,MAAMR,OAChBsB,IAAK,EAAKd,MAAMJ,OAChBG,KAAM,IAGT,MAAO,CACJE,WAAW,GAAD,mBAAMD,EAAMC,YAAZ,CAAwBO,QAIxC,EAAKO,cAtGM,EAwHfC,YAAc,WACb,OAAO,EAAKhB,MAAMC,WAAWC,KAAI,SAAAJ,GAAI,OAClC,cAACmB,EAAA,EAAD,CAA6BC,QAAS,IAAKC,WAAW,OAAtD,SACG,qBAAkBC,UAAU,OAA5B,UACG,mBAAGA,UAAU,OAAOC,QAAS,kBAAM,EAAKjB,WAAWN,IAAnD,eAIA,0BACGsB,UACGtB,EAAKC,KAAO,GAAK,QAAUD,EAAKC,KAAO,GAAK,OAAS,GAF3D,UAKID,EAAKe,IACN,+BAAOf,EAAKgB,SAGf,uBACGM,UAAU,OACVE,KAAK,SACL5B,MAAOI,EAAKC,KACZwB,SAAU,EAAK1B,WAAWC,OAlBvBA,EAAKW,KADGX,EAAKW,QA1Hd,EAsJlBM,UAAY,WACR,EAAKxB,SAAS,CACVC,OAAQ,GACRI,OAAQ,KAGZ,EAAK4B,MAAMC,QAAQC,SAvJrB,EAAKF,MAAMG,IAAMC,YAEf,EAAK5B,MAAQ,CACTR,OAAO,yBACPI,OAAO,8BACPK,WAAW,CAAC,CACR,GAAM,EACN,IAAO,iBACP,IAAO,wDACP,KAAQ,GAEZ,CACI,GAAM,EACN,IAAO,eACP,IAAO,0DACP,KAAQ,IAEZ,CAEI,GAAM,EACN,IAAO,WACP,IAAO,6CACP,KAAQ,GAEZ,CACI,GAAM,EACN,IAAO,qBACP,IAAO,iCACP,KAAQ,MAjCF,E,0CAmKlB,WACI,OACG,gCACG,cAAC4B,EAAA,EAAD,CAAiBC,UAAU,KAA3B,SACIC,KAAKf,gBAGT,uBAAMI,UAAU,UAAUY,WAAYD,KAAKzB,aAA3C,UACG,uBACG2B,WAAS,EACTX,KAAK,OACLY,IAAKH,KAAKP,MACV9B,MAAOqC,KAAK/B,MAAMR,OAClB+B,SAAUQ,KAAK1C,YAGlB,uBACGiC,KAAK,OACL5B,MAAOqC,KAAK/B,MAAMJ,OAClB2B,SAAUQ,KAAKpC,eAIrB,oBAAGyB,UAAU,UAAb,UACIW,KAAK/B,MAAMR,OACZ,uBACA,gCAAQuC,KAAK/B,MAAMJ,mB,GA/LlB+B,IAAMQ,WCCxBC,IAASC,OAAQ,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.871a7610.chunk.js","sourcesContent":["import React from 'react';\n\nimport {CSSTransition, TransitionGroup} from 'react-transition-group'\n\nimport './app.css';\n\nclass App extends React.Component{\n\n    constructor(props){\n\n      super(props)\n\n\n      this.input=React.createRef()\n\n        this.state = {\n            newWho:'Maarceline the Vampire',\n            newWat:'A wild rocket girll , yeah.',\n            characters:[{\n                \"id\": 1,\n                \"who\": \"Finn the Human\",\n                \"wat\": \"A silly kid who wants to become a great hero one day.\",\n                \"cool\": 9\n            },\n            {\n                \"id\": 2,\n                \"who\": \"Jake the Dog\",\n                \"wat\": \"Finn's best friend is a wise, old dog with a big heart.\",\n                \"cool\": 42\n            } ,\n            {\n\n                \"id\": 3,\n                \"who\": \"Ice King\",\n                \"wat\": \"Armed with a magic crown and an icy heart.\",\n                \"cool\": 0\n            },\n            {\n                \"id\": 4,\n                \"who\": \"Princess Bubblegum\",\n                \"wat\": \"A millionaire nerd enthusiast.\",\n                \"cool\": 24\n            }]\n        }\n    }\n\n    /**\n    * SAVE NEW WHO\n    */\n     handleWho=event=>{\n          this.setState({\n          newWho:event.target.value\n          })\n    }\n\n   /**\n    * SAVE NEW WAT\n    */\n    handleWat=event=>{\n        this.setState({\n          newWat:event.target.value\n       })\n    }\n\n    /**\n    * UPDATE COOL\n    */\n    handleCool=dude=>event=>{\n    \n        const cool=event.target.value\n        this.setState((state) => {\n            return { \n                  characters:state.characters.map(item=>\n                  item===dude ? {...dude, cool } : item\n                  )\n            }\n        })\n      \n    }\n\n   /**\n    * REMOVE DUDE\n    */\n    removeDude=dude=>{\n        this.setState((state) => { \n            return { \n              characters:state.characters.filter(item=>item !==dude)\n            }\n        })\n      \n    }\n\n   /**\n    * ADD NEW DUDE\n    */\n    handleSubmit = event => {\n        if (event.key === 'Enter' && this.state.newWho && this.state.newWat) {\n           this.setState(state => {\n              const newDude = {\n                 id: Math.max(...state.characters.map(d => d.id)) + 1,\n                 who: this.state.newWho,\n                 wat: this.state.newWat,\n                 cool: 15\n              }\n  \n              return {\n                 characters: [...state.characters, newDude]\n              }\n           })\n  \n           this.resetForm()\n        }\n    }\n    /**\n    * LOAD MY DUDES\n    */\n   /*\n   componentDidMount=()=>{\n   fetch('https://api.myjson.com/bins/zg7ze')\n   .then(res => res.json())\n   .then(json => this.setState({ characters: json }))\n   }\n   */\n   \n\n      /**\n    * ListOfDudes \"COMPONENT\"\n    */\n       listOfDudes = () => {\n        return this.state.characters.map(dude => (\n           <CSSTransition key={dude.id} timeout={200} classNames=\"dude\">\n              <li key={dude.id} className=\"dude\">\n                 <a className=\"ctrl\" onClick={() => this.removeDude(dude)}>\n                    x\n                 </a>\n  \n                 <article\n                    className={\n                       dude.cool < 10 ? 'faded' : dude.cool > 50 ? 'gold' : ''\n                    }\n                 >\n                    {dude.who}\n                    <span>{dude.wat}</span>\n                 </article>\n  \n                 <input\n                    className=\"ctrl\"\n                    type=\"number\"\n                    value={dude.cool}\n                    onChange={this.handleCool(dude)}\n                 />\n              </li>\n           </CSSTransition>\n        ))\n     }\n    /**\n    * RESET FORM\n    */\n    resetForm = () => {\n        this.setState({\n            newWho: '',\n            newWat: ''\n        })\n\n        this.input.current.focus()\n    }\n\n\n   /**\n    * TEMPLATE\n    */\n    render() {\n        return (\n           <div>\n              <TransitionGroup component=\"ul\">\n                 {this.listOfDudes()}\n              </TransitionGroup>\n  \n              <form className=\"add-new\" onKeyPress={this.handleSubmit}>\n                 <input\n                    autoFocus\n                    type=\"text\"\n                    ref={this.input}\n                    value={this.state.newWho}\n                    onChange={this.handleWho}\n                 />\n  \n                 <input\n                    type=\"text\"\n                    value={this.state.newWat}\n                    onChange={this.handleWat}\n                 />\n              </form>\n  \n              <p className=\"preview\">\n                 {this.state.newWho}\n                 <br />\n                 <small>{this.state.newWat}</small>\n              </p>\n           </div>\n        )\n     }\n  }\n  \n  export default App\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport App from './App';\n\n\nReactDOM.render( <App />,document.getElementById('root')\n \n    \n  \n  \n);\n\n"],"sourceRoot":""}